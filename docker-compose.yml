version: '3.11'

services:
  # django:
  #   image: django-docker:0.0.1
  #   build: .
  #   ports:
  #     - "8000:8000"
  #   volumes:
  #     - .:/code
  #   depends_on:
  #     - postgres
  #   networks:
  #     - postgresnet


  postgres:
    container_name: postgres_container
    image: postgres:14.8-alpine3.18
    command:
      - "postgres"
      - "-c"
      - "max_connections=50"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "effective_cache_size=4GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=10GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "idle_in_transaction_session_timeout=10s"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=60s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"
    environment:
      POSTGRES_DB: "rabbitdb"
      POSTGRES_USER: "rabbituser"
      POSTGRES_PASSWORD: "dbpwd4rabbit"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ../2. Init Database:/docker-entrypoint-initdb.d
      - rabbitdb-data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rabbituser -d rabbitdb"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    networks:
      - postgresnet

  
      
  
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4:7.2
    environment:
      PGADMIN_DEFAULT_EMAIL: "rabbituser@rabbit.com"
      PGADMIN_DEFAULT_PASSWORD: "pgadminpwd4rabbit"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    depends_on:
      - postgres
    networks:
      - postgresnet

  postgres_exporter:
    container_name: exporter_container
    image: prometheuscommunity/postgres-exporter:v0.10.1
    environment:
      DATA_SOURCE_URI: "postgres:5432/rabbitdb?sslmode=disable"
      DATA_SOURCE_USER: "rabbituser"
      DATA_SOURCE_PASS: "dbpwd4rabbit"
      PG_EXPORTER_EXTEND_QUERY_PATH: "/etc/postgres_exporter/queries.yml"
    volumes:
      - ./queries.yml:/etc/postgres_exporter/queries.yml:ro
    ports:
      - "9187:9187"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 500M
    depends_on:
      - postgres
    networks:
      - postgresnet


  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - postgres_exporter
    networks:
      - postgresnet

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"  
    volumes:
      - grafana-data:/var/lib/grafana  
    environment:
      - GF_SUPPORT_INGRESS=true  
    restart: unless-stopped
    depends_on:
      - prometheus
    networks:
      - postgresnet


  

volumes:
  rabbitdb-data:
  pgadmin-data:
  grafana-data:


networks:
  postgresnet:
    driver: bridge
  